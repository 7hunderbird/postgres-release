resources:
- name: postgres-release-develop
  type: git
  source:
    uri: https://github.com/cloudfoundry/postgres-release.git
    branch: develop

- name: postgres-ci-env
  type: git
  source:
    uri: git@github.com:cloudfoundry/postgres-ci-env
    branch: master
    private_key: {{postgres_ci_env_private_key}}

- name: postgres-release-master
  type: git
  source:
    uri: https://github.com/cloudfoundry/postgres-release.git
    branch: master

jobs:
- name: test-upgrade-from-master
  serial_groups: [deploy]
  plan:
  - aggregate:
    - get: postgres-ci-env
    - get: postgres-release
      resource: postgres-release-develop
      trigger: true
    - get: postgres-release-master
      resource: postgres-release-master
  - task: deploy-master-postgres
    file: postgres-release/ci/scripts/deploy-postgres/task.yml
    params: &master_params
      BOSH_DIRECTOR: {{postgres_cf_bosh_director}}
      BOSH_USER: {{postgres_cf_bosh_user}}
      BOSH_PASSWORD: {{postgres_cf_bosh_password}}
      PG_DEPLOYMENT: {{master_pg_deployment}}
      PG_VERSION: master
      PG_USER: {{pg_user}}
      PG_PSW: {{pg_password}}
      PG_PORT: 5524
      PG_DB: {{pg_db}}
  - task: load-postgres-db
    file: postgres-release/ci/scripts/load-postgres-db/task.yml
    params:
      <<: *master_params
      PG_HOST: 0.postgres.default.pgci-master.microbosh
  - task: deploy-latest-postgres
    file: postgres-release/ci/scripts/deploy-postgres/task.yml
    params:
      <<: *master_params
      PG_VERSION: develop
  - task: check-postgres-db
    file: postgres-release/ci/scripts/check-postgres-db/task.yml
    params:
      <<: *master_params
      PG_HOST: 0.postgres.default.pgci-master.microbosh
  - task: delete-postgres-deployment
    file: postgres-release/ci/scripts/run-bosh-delete/task.yml
    params:
      DEPLOYMENT_NAME: {{master_pg_deployment}}
      BOSH_DIRECTOR: {{postgres_cf_bosh_director}}
      BOSH_USER: {{postgres_cf_bosh_user}}
      BOSH_PASSWORD: {{postgres_cf_bosh_password}}

- name: test-upgrade-from-old
  serial_groups: [deploy]
  plan:
  - aggregate:
    - get: postgres-ci-env
    - get: postgres-release
      passed: [test-upgrade-from-master]
      trigger: true
      resource: postgres-release-develop
    - get: postgres-release-master
      resource: postgres-release-master
  - task: deploy-old-postgres
    file: postgres-release/ci/scripts/deploy-postgres/task.yml
    params: &old_params
      BOSH_DIRECTOR: {{postgres_cf_bosh_director}}
      BOSH_USER: {{postgres_cf_bosh_user}}
      BOSH_PASSWORD: {{postgres_cf_bosh_password}}
      PG_DEPLOYMENT: {{old_pg_deployment}}
      PG_VERSION: 1
      PG_USER: {{pg_user}}
      PG_PSW: {{pg_password}}
      PG_PORT: 5524
      PG_DB: {{pg_db}}
  - task: load-postgres-db
    file: postgres-release/ci/scripts/load-postgres-db/task.yml
    params:
      <<: *old_params
      PG_HOST: 0.postgres.default.pgci-old.microbosh
  - task: deploy-latest-postgres
    file: postgres-release/ci/scripts/deploy-postgres/task.yml
    params:
      <<: *old_params
      PG_VERSION: develop
  - task: check-postgres-db
    file: postgres-release/ci/scripts/check-postgres-db/task.yml
    params:
      <<: *old_params
      PG_HOST: 0.postgres.default.pgci-old.microbosh
  - task: delete-postgres-deployment
    file: postgres-release/ci/scripts/run-bosh-delete/task.yml
    params:
      DEPLOYMENT_NAME: {{old_pg_deployment}}
      BOSH_DIRECTOR: {{postgres_cf_bosh_director}}
      BOSH_USER: {{postgres_cf_bosh_user}}
      BOSH_PASSWORD: {{postgres_cf_bosh_password}}

- name: cleanup-resources
  plan:
  - aggregate:
    - get: postgres-release
      resource: postgres-release-develop
      passed: [test-upgrade-from-old]
      trigger: true
  - task: cleanup-releases
    file: postgres-release/ci/scripts/run-bosh-cleanup/task.yml
    params:
      BOSH_DIRECTOR: {{postgres_cf_bosh_director}}
      BOSH_USER: {{postgres_cf_bosh_user}}
      BOSH_PASSWORD: {{postgres_cf_bosh_password}}
